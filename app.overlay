/*
 * Copyright (c) 2022 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

#include <dt-bindings/regulator/npm1300.h>

/ {
	lra_en_pin: lra-en-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio1 4 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	lcd_bk_en_pin: lcd-bk-en-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	lcd_vcom_pin: lcd-vcom-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio1 15 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	i2s_mclk_pin: i2s-mclk-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	lsm6d_int1_pin: lsm6d-int1-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	lsm6d_int2_pin: lsm6d-int2-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 24 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	press_int_pin: press-int-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};
	press_cs_pin: press-cs-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 27 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	button_1_pin: button-1-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	button_2_pin: button-2-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 5 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	button_3_pin: button-3-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 6 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	button_4_pin: button-4-pin {
                compatible = "nordic,gpio-pins";
                gpios = <&gpio0 7 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

	chosen {
		zephyr,display = &lcd;
	};
};

&gpio0 {
        status = "okay";
};

&gpiote0 {
        status = "okay";
};

&gpio1 {
        status = "okay";
};

&gpiote1 {
        status = "okay";
};

&pwm0 {
        status = "disabled";
};

&sw_pwm {
        status = "okay";
        channel-gpios = <&gpio1 7 PWM_POLARITY_INVERTED>;
};

&pwm_led0 {
        pwms = <&sw_pwm 0 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
};

&adc {
	status = "okay";
};

&i2c2 {
	status = "okay";
        pinctrl-0 = <&i2c2_default>;
        pinctrl-1 = <&i2c2_sleep>;
        pinctrl-names = "default", "sleep";
        light: opt3001-light@44 {
                status = "okay";
                compatible = "ti,opt3001";
                reg = <0x44>;
	};

        lsm6dso: lsm6dso@6a {
		compatible = "st,lsm6dso";
		reg = <0x6a>;
		irq-gpios = <&gpio0 23 GPIO_ACTIVE_HIGH>;
                status = "okay";
	};

        bmp388: bmp388@76 {
		compatible = "bosch,bmp388";
		reg = <0x76>;
                int-gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
		odr = "50";
		osr-press = <4>;
		osr-temp = <2>;
		status = "okay";
	};
};

&i2c1_default {
        group1 {
                bias-pull-up;
        };
};

&npm1300_ek_ldo1 {
        regulator-initial-mode = <NPM1300_LDSW_MODE_LDSW>;
};

&npm1300_ek_buck2 {
	regulator-init-microvolt = < 3000000 >;
};

&npm1300_ek_pmic {
        host-int-gpios = <&gpio1 1 0>;
        pmic-int-pin = <1>;
};

i2s_rxtx: &i2s0 {
        status = "okay";
        pinctrl-0 = <&i2s0_default_alt>;
        pinctrl-names = "default";
	clock-source = "ACLK";
};

&spi4 {
        status = "okay";
        pinctrl-0 = <&spi4_default>;
        pinctrl-1 = <&spi4_sleep>;
        pinctrl-names = "default", "sleep";
        cs-gpios = <&gpio0 21 GPIO_ACTIVE_HIGH>;
        lcd: ls0xx@0 {
		compatible = "sharp,ls0xx";
                reg = <0>;
                extcomin-gpios = <&gpio1 15 GPIO_ACTIVE_HIGH>;
                disp-en-gpios = <&gpio1 8 GPIO_ACTIVE_HIGH>;
                extcomin-frequency = <120>;
                height = <144>;
                width = <168>;
                spi-max-frequency = <1000000>;
                status = "okay";
	};
};

&pinctrl {
        uart0_default: uart0_default {
                group1 {
                        psels = <NRF_PSEL(UART_TX, 0, 2)>,
                                <NRF_PSEL(UART_RTS, 0, 9)>;
                };
                group2 {
                        psels = <NRF_PSEL(UART_RX, 0, 3)>,
                                <NRF_PSEL(UART_CTS, 0, 8)>;
                        bias-pull-up;
                };
        };

        uart0_sleep: uart0_sleep {
                group1 {
                        psels = <NRF_PSEL(UART_TX, 0, 2)>,
                                <NRF_PSEL(UART_RX, 0, 3)>,
                                <NRF_PSEL(UART_RTS, 0, 9)>,
                                <NRF_PSEL(UART_CTS, 0, 8)>;
                        low-power-enable;
                };
        };

        i2c2_default: i2c2_default {
                group1 {
                        psels = <NRF_PSEL(TWIM_SDA, 1, 5)>,
                                <NRF_PSEL(TWIM_SCL, 1, 6)>;
                };
        };

        i2c2_sleep: i2c2_sleep {
                group1 {
                        psels = <NRF_PSEL(TWIM_SDA, 1, 5)>,
                                <NRF_PSEL(TWIM_SCL, 1, 6)>;
                        low-power-enable;
                };
        };

        i2s0_default_alt: i2s0_default_alt {
                group1 {
                        psels = <NRF_PSEL(I2S_SCK_M, 1, 12)>,
                                <NRF_PSEL(I2S_LRCK_M, 1, 11)>,
                                <NRF_PSEL(I2S_MCK, 1, 10)>,
                                <NRF_PSEL(I2S_SDOUT, 1, 14)>,
                                <NRF_PSEL(I2S_SDIN, 1, 13)>;
                };
        };

        spi4_default: spi4_default {
                group1 {
                        psels = <NRF_PSEL(SPIM_SCK, 0, 19)>,
                                <NRF_PSEL(SPIM_MOSI, 0, 20)>,
                                <NRF_PSEL(SPIM_MISO, 0, 22)>;
                };
        };

        spi4_sleep: spi4_sleep {
                group1 {
                        psels = <NRF_PSEL(SPIM_SCK, 0, 19)>,
                                <NRF_PSEL(SPIM_MOSI, 0, 20)>,
                                <NRF_PSEL(SPIM_MISO, 0, 22)>;
                        low-power-enable;
                };
        };
};

&clock {
        hfclkaudio-frequency = <11289600>;
};


